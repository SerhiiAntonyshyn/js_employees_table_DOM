{"version":3,"sources":["scripts/main.js"],"names":["sortColumn","commonTextContent","pointOfSortingColumn","needReverseSortingForNewEmployee","table","document","querySelector","officeRow","headerIndex","Name","Position","Office","Age","Salary","notifications","shortName","title","description","type","young","old","incorrectAge","incorrectSalary","success","offices","tokyo","singapore","london","newyork","edinburgh","sanfrancisco","handleTableSort","column","rows","tBodies","children","sort","a","b","formatNumber","textContent","localeCompare","append","salary","substr","split","join","reverseColumn","reversedTable","reverse","row","tableForRegisterNewEmployee","createForm","createElement","officeTown","classList","method","action","innerHTML","parentElement","tHead","addEventListener","event","item","target","selectedRow","map","remove","add","form","addNotification","message","titleMessage","descriptionMessage","innerText","notification","setTimeout","rulesToAddNewEmployee","formData","age","name","length","Number","isNaN","formatToAddToSalary","Intl","NumberFormat","format","rowForNewEmployee","employee","position","office","newRow","SaveToTableNewEmployee","preventDefault","data","FormData","Object","fromEntries","entries","saveNewInputValue","inputItem","value","newInput","key"],"mappings":"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","file":"main.119bafc3.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write code here\nconst table = document.querySelector('table');\nlet officeRow = '';\nlet sortColumn;\nlet commonTextContent;\nlet pointOfSortingColumn;\nlet needReverseSortingForNewEmployee;\n\nconst headerIndex = {\n  Name: 0,\n  Position: 1,\n  Office: 2,\n  Age: 3,\n  Salary: 4,\n};\n\nconst notifications = {\n  shortName: {\n    title: 'Wrong name',\n    description: 'Name value has less than 4 letters',\n    type: 'error',\n  },\n  young: {\n    title: 'Wrong age',\n    description: 'Age value is less than 18',\n    type: 'error',\n  },\n  old: {\n    title: 'Wrong age',\n    description: 'Age value is bigger than 90',\n    type: 'error',\n  },\n  incorrectAge: {\n    title: 'Wrong age',\n    description: 'Age value should have a number type',\n    type: 'error',\n  },\n  incorrectSalary: {\n    title: 'Wrong salary',\n    description: 'Salary value should have a number type',\n    type: 'error',\n  },\n  success: {\n    title: 'Successfully added',\n    description: 'A new employee successfully added to the table',\n    type: 'success',\n  },\n};\n\nconst offices = {\n  tokyo: 'Tokyo',\n  singapore: 'Singapore',\n  london: 'London',\n  newyork: 'New York',\n  edinburgh: 'Edinburgh',\n  sanfrancisco: 'San Francisco',\n};\n\ntable.tHead.addEventListener('click', (event) => {\n  const item = event.target;\n\n  switch (item.textContent) {\n    case 'Name':\n      if (sortColumn !== item.textContent) {\n        sortColumn = item.textContent;\n        pointOfSortingColumn = sortColumn;\n        handleTableSort(headerIndex.Name);\n        needReverseSortingForNewEmployee = 'no';\n      } else {\n        pointOfSortingColumn = sortColumn;\n        reverseColumn(headerIndex.Name);\n        sortColumn = '';\n        needReverseSortingForNewEmployee = 'yes';\n      }\n      break;\n    case 'Position':\n      if (sortColumn !== item.textContent) {\n        sortColumn = item.textContent;\n        pointOfSortingColumn = sortColumn;\n        handleTableSort(headerIndex.Position);\n        needReverseSortingForNewEmployee = 'no';\n      } else {\n        pointOfSortingColumn = sortColumn;\n        reverseColumn(headerIndex.Position);\n        sortColumn = '';\n        needReverseSortingForNewEmployee = 'yes';\n      }\n      break;\n    case 'Office':\n      if (sortColumn !== item.textContent) {\n        sortColumn = item.textContent;\n        pointOfSortingColumn = sortColumn;\n        handleTableSort(headerIndex.Office);\n        needReverseSortingForNewEmployee = 'no';\n      } else {\n        pointOfSortingColumn = sortColumn;\n        reverseColumn(headerIndex.Office);\n        sortColumn = '';\n        needReverseSortingForNewEmployee = 'yes';\n      }\n      break;\n    case 'Age':\n      if (sortColumn !== item.textContent) {\n        sortColumn = item.textContent;\n        pointOfSortingColumn = sortColumn;\n        handleTableSort(headerIndex.Age);\n        needReverseSortingForNewEmployee = 'no';\n      } else {\n        pointOfSortingColumn = sortColumn;\n        reverseColumn(headerIndex.Age);\n        sortColumn = '';\n        needReverseSortingForNewEmployee = 'yes';\n      }\n      break;\n    case 'Salary':\n      if (sortColumn !== item.textContent) {\n        sortColumn = item.textContent;\n        pointOfSortingColumn = sortColumn;\n        handleTableSort(headerIndex.Salary);\n        needReverseSortingForNewEmployee = 'no';\n      } else {\n        pointOfSortingColumn = sortColumn;\n        reverseColumn(headerIndex.Salary);\n        sortColumn = '';\n        needReverseSortingForNewEmployee = 'yes';\n      }\n      break;\n  }\n});\n\nfunction handleTableSort(column) {\n  const rows = [...table.tBodies[0].children].sort(function(a, b) {\n    if (column === headerIndex.Salary) {\n      return formatNumber(a.children[column].textContent)\n      - formatNumber(b.children[column].textContent);\n    } else {\n      return a.children[column].textContent\n        .localeCompare(b.children[column].textContent);\n    }\n  });\n\n  table.tBodies[0].append(...rows);\n}\n\nfunction formatNumber(salary) {\n  return +salary.substr(1).split(',').join('');\n}\n\nfunction reverseColumn() {\n  const reversedTable = [...table.tBodies[0].children].reverse();\n\n  for (const row of reversedTable) {\n    table.tBodies[0].append(row);\n  }\n}\n\ntable.tBodies[0].addEventListener('click', event => {\n  const selectedRow = event.target.parentElement;\n  const person = [...table.tBodies[0].children];\n\n  person.map(children => children.classList.remove('active'));\n  selectedRow.classList.add('active');\n});\n\nfunction tableForRegisterNewEmployee() {\n  const createForm = document.createElement('form');\n\n  createForm.classList = 'new-employee-form';\n  createForm.method = 'GET';\n  createForm.action = '/';\n\n  for (const officeTown in offices) {\n    officeRow += `<option value=\"${officeTown}\">\n    ${offices[officeTown]}</option>`;\n  }\n\n  createForm.innerHTML = `\n<label>Name: <input name=\"name\" type=\"text\" required></label>\n<label>Position: <input name=\"position\" type=\"text\" required></label>\n<label>Office: <select name=\"office\">${officeRow}</select></label>\n<label>Age: <input name=\"age\" type=\"text\" required></label>\n<label>Salary: <input name=\"salary\" type=\"text\" required></label>\n<button type=\"submit\">Save to table</button>`;\n  table.parentElement.append(createForm);\n}\n\ntableForRegisterNewEmployee();\n\nconst form = document.querySelector('form');\n\nconst addNotification = ({ title, description, type }) => {\n  const message = document.createElement('div');\n  const titleMessage = document.createElement('h2');\n  const descriptionMessage = document.createElement('p');\n\n  message.classList.add('notification', type);\n  titleMessage.classList.add('title');\n  titleMessage.innerText = title;\n  descriptionMessage.innerText = description;\n  message.append(titleMessage, descriptionMessage);\n  table.parentElement.append(message);\n\n  const notification = document.querySelector('.notification');\n\n  setTimeout(() => notification.remove(), 2000);\n};\n\nfunction rulesToAddNewEmployee(formData) {\n  const { age, name, salary } = formData;\n\n  if (name.length < 4) {\n    addNotification(notifications.shortName);\n\n    return false;\n  }\n\n  if (age < 18) {\n    addNotification(notifications.young);\n\n    return false;\n  } else if (age > 90) {\n    addNotification(notifications.old);\n\n    return false;\n  }\n\n  if (Number.isNaN(+age)) {\n    addNotification(notifications.incorrectAge);\n\n    return false;\n  }\n\n  if (Number.isNaN(+salary)) {\n    addNotification(notifications.incorrectSalary);\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction formatToAddToSalary(salary) {\n  return `$${new Intl.NumberFormat('en-us').format(salary)}`;\n}\n\nfunction rowForNewEmployee(employee) {\n  const { name, position, office, age, salary } = employee;\n  const newRow = document.createElement('tr');\n\n  newRow.innerHTML = `\n    <td>${name}</td>\n    <td>${position}</td>\n    <td>${offices[office]}</td>\n    <td>${age}</td>\n    <td>${formatToAddToSalary(salary)}</td>\n  `;\n\n  return newRow;\n}\n\nfunction SaveToTableNewEmployee(event) {\n  event.preventDefault();\n\n  // eslint-disable-next-line no-undef\n  const data = new FormData(form);\n  const employee = Object.fromEntries(data.entries());\n\n  if (rulesToAddNewEmployee(employee)) {\n    table.tBodies[0].append(rowForNewEmployee(employee));\n\n    addNotification(notifications.success);\n  }\n\n  if (needReverseSortingForNewEmployee === 'no') {\n    handleTableSort(headerIndex[pointOfSortingColumn]);\n  } else if (needReverseSortingForNewEmployee === 'yes') {\n    handleTableSort(headerIndex[pointOfSortingColumn]);\n    reverseColumn();\n  }\n}\n\nform.addEventListener('submit', SaveToTableNewEmployee);\n\nfunction saveNewInputValue() {\n  const inputItem = table.tBodies[0].querySelector('input');\n\n  if (inputItem.value !== '1') {\n    inputItem.parentElement.textContent = inputItem.value;\n  } else {\n    inputItem.parentElement.textContent = commonTextContent;\n  }\n  inputItem.remove();\n}\n\ntable.tBodies[0].addEventListener('dblclick', event => {\n  if (table.tBodies[0].querySelector('input')) {\n    saveNewInputValue();\n  }\n\n  const item = event.target;\n  const newInput = document.createElement('input');\n\n  commonTextContent = item.textContent;\n  newInput.classList = 'cell-input';\n  newInput.value = item.textContent;\n  item.textContent = '';\n  item.append(newInput);\n  newInput.addEventListener('blur', saveNewInputValue);\n});\n\ntable.addEventListener('keydown', event => {\n  if (event.key === 'Enter') {\n    saveNewInputValue();\n  }\n});\n"]}